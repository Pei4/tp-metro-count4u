{"ast":null,"code":"var _jsxFileName = \"/Users/patrice/Desktop/SP/Code/GitHub/test-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DndContext, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport { sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\nimport Droppable from \"./Droppable\";\nimport { arrayMove, insertAtIndex, removeAtIndex } from \"array\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState({\n    group1: [\"1\", \"2\", \"3\"],\n    group2: [\"4\", \"5\", \"6\"],\n    group3: [\"7\", \"8\", \"9\"]\n  });\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n\n  const handleDragOver = _ref => {\n    var _over$data$current;\n\n    let {\n      over,\n      active\n    } = _ref;\n    const overId = over === null || over === void 0 ? void 0 : over.id;\n\n    if (!overId) {\n      return;\n    }\n\n    const activeContainer = active.data.current.sortable.containerId;\n    const overContainer = (_over$data$current = over.data.current) === null || _over$data$current === void 0 ? void 0 : _over$data$current.sortable.containerId;\n\n    if (!overContainer) {\n      return;\n    }\n\n    if (activeContainer !== overContainer) {\n      setItems(items => {\n        var _over$data$current2;\n\n        const activeIndex = active.data.current.sortable.index;\n        const overIndex = ((_over$data$current2 = over.data.current) === null || _over$data$current2 === void 0 ? void 0 : _over$data$current2.sortable.index) || 0;\n        return moveBetweenContainers(items, activeContainer, activeIndex, overContainer, overIndex, active.id);\n      });\n    }\n  };\n\n  const handleDragEnd = _ref2 => {\n    let {\n      active,\n      over\n    } = _ref2;\n\n    if (!over) {\n      return;\n    }\n\n    if (active.id !== over.id) {\n      var _over$data$current3, _over$data$current4;\n\n      const activeContainer = active.data.current.sortable.containerId;\n      const overContainer = ((_over$data$current3 = over.data.current) === null || _over$data$current3 === void 0 ? void 0 : _over$data$current3.sortable.containerId) || over.id;\n      const activeIndex = active.data.current.sortable.index;\n      const overIndex = ((_over$data$current4 = over.data.current) === null || _over$data$current4 === void 0 ? void 0 : _over$data$current4.sortable.index) || 0;\n      setItems(items => {\n        let newItems;\n\n        if (activeContainer === overContainer) {\n          newItems = { ...items,\n            [overContainer]: arrayMove(items[overContainer], activeIndex, overIndex)\n          };\n        } else {\n          newItems = moveBetweenContainers(items, activeContainer, activeIndex, overContainer, overIndex, active.id);\n        }\n\n        return newItems;\n      });\n    }\n  };\n\n  const moveBetweenContainers = (items, activeContainer, activeIndex, overContainer, overIndex, item) => {\n    return { ...items,\n      [activeContainer]: removeAtIndex(items[activeContainer], activeIndex),\n      [overContainer]: insertAtIndex(items[overContainer], overIndex, item)\n    };\n  };\n\n  const containerStyle = {\n    display: \"flex\"\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    onDragEnd: handleDragEnd,\n    onDragOver: handleDragOver,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: Object.keys(items).map(group => /*#__PURE__*/_jsxDEV(Droppable, {\n        id: group,\n        items: items[group]\n      }, group, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XbpS9Buf5PpcLffQgLgFjp8aW+E=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DndContext","KeyboardSensor","PointerSensor","useSensor","useSensors","sortableKeyboardCoordinates","Droppable","arrayMove","insertAtIndex","removeAtIndex","App","items","setItems","group1","group2","group3","sensors","coordinateGetter","handleDragOver","over","active","overId","id","activeContainer","data","current","sortable","containerId","overContainer","activeIndex","index","overIndex","moveBetweenContainers","handleDragEnd","newItems","item","containerStyle","display","Object","keys","map","group"],"sources":["/Users/patrice/Desktop/SP/Code/GitHub/test-react/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  DndContext,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors\n} from \"@dnd-kit/core\";\nimport { sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\n\nimport Droppable from \"./Droppable\";\nimport { arrayMove, insertAtIndex, removeAtIndex } from \"array\";\n\nfunction App() {\n  const [items, setItems] = useState({\n    group1: [\"1\", \"2\", \"3\"],\n    group2: [\"4\", \"5\", \"6\"],\n    group3: [\"7\", \"8\", \"9\"]\n  });\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates\n    })\n  );\n\n  const handleDragOver = ({ over, active }) => {\n    const overId = over?.id;\n\n    if (!overId) {\n      return;\n    }\n\n    const activeContainer = active.data.current.sortable.containerId;\n    const overContainer = over.data.current?.sortable.containerId;\n\n    if (!overContainer) {\n      return;\n    }\n\n    if (activeContainer !== overContainer) {\n      setItems((items) => {\n        const activeIndex = active.data.current.sortable.index;\n        const overIndex = over.data.current?.sortable.index || 0;\n\n        return moveBetweenContainers(\n          items,\n          activeContainer,\n          activeIndex,\n          overContainer,\n          overIndex,\n          active.id\n        );\n      });\n    }\n  };\n\n  const handleDragEnd = ({ active, over }) => {\n    if (!over) {\n      return;\n    }\n\n    if (active.id !== over.id) {\n      const activeContainer = active.data.current.sortable.containerId;\n      const overContainer = over.data.current?.sortable.containerId || over.id;\n      const activeIndex = active.data.current.sortable.index;\n      const overIndex = over.data.current?.sortable.index || 0;\n\n      setItems((items) => {\n        let newItems;\n        if (activeContainer === overContainer) {\n          newItems = {\n            ...items,\n            [overContainer]: arrayMove(\n              items[overContainer],\n              activeIndex,\n              overIndex\n            )\n          };\n        } else {\n          newItems = moveBetweenContainers(\n            items,\n            activeContainer,\n            activeIndex,\n            overContainer,\n            overIndex,\n            active.id\n          );\n        }\n\n        return newItems;\n      });\n    }\n  };\n\n  const moveBetweenContainers = (\n    items,\n    activeContainer,\n    activeIndex,\n    overContainer,\n    overIndex,\n    item\n  ) => {\n    return {\n      ...items,\n      [activeContainer]: removeAtIndex(items[activeContainer], activeIndex),\n      [overContainer]: insertAtIndex(items[overContainer], overIndex, item)\n    };\n  };\n\n  const containerStyle = { display: \"flex\" };\n\n  return (\n    <DndContext\n      sensors={sensors}\n      onDragEnd={handleDragEnd}\n      onDragOver={handleDragOver}\n    >\n      <div style={containerStyle}>\n        {Object.keys(items).map((group) => (\n          <Droppable id={group} items={items[group]} key={group} />\n        ))}\n      </div>\n    </DndContext>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}