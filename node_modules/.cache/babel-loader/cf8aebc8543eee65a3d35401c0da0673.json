{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DndContext, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport { sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\nimport Droppable from \"./js/Droppable\";\nimport { arrayMove, insertAtIndex, removeAtIndex } from \"./js/array\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState( //{group1: [\"1\", \"2\", \"3\"]}\n  [\"1\", \"2\", \"3\"]);\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  /*const handleDragOver = ({\n    over,\n    active\n  }) => {\n    const overId = over?.id;\n     if (!overId) {\n      return;\n    }\n     const activeContainer = active.data.current.sortable.containerId;\n    const overContainer = over.data.current?.sortable.containerId;\n     if (!overContainer) {\n      return;\n    }\n     if (activeContainer !== overContainer) {\n      setItems(items => {\n        const activeIndex = active.data.current.sortable.index;\n        const overIndex = over.data.current?.sortable.index || 0;\n        return moveBetweenContainers(items, activeContainer, activeIndex, overContainer, overIndex, active.id);\n      });\n    }\n  };*/\n\n  const handleDragEnd = _ref => {\n    let {\n      active,\n      over\n    } = _ref;\n\n    if (!over) {\n      return;\n    }\n\n    if (active.id !== over.id) {\n      var _over$data$current;\n\n      //const activeContainer = active.data.current.sortable.containerId;\n      //const overContainer = over.data.current?.sortable.containerId || over.id;\n      const container = over.id; //test\n\n      const activeIndex = active.data.current.sortable.index;\n      const overIndex = ((_over$data$current = over.data.current) === null || _over$data$current === void 0 ? void 0 : _over$data$current.sortable.index) || 0;\n      setItems(items => {\n        let newItems; //if (activeContainer === overContainer) {\n\n        newItems = { ...items,\n          //[overContainer]: arrayMove(items[overContainer], activeIndex, overIndex)\n          [container]: arrayMove(items[container], activeIndex, overIndex)\n        };\n        /*} else {\n          newItems = moveBetweenContainers(items, activeContainer, activeIndex, overContainer, overIndex, active.id);\n        }*/\n\n        return newItems;\n      });\n    }\n  };\n  /*const moveBetweenContainers = (items, activeContainer, activeIndex, overContainer, overIndex, item) => {\n    return { ...items,\n      [activeContainer]: removeAtIndex(items[activeContainer], activeIndex),\n      [overContainer]: insertAtIndex(items[overContainer], overIndex, item)\n    };\n  };*/\n\n\n  const containerStyle = {\n    display: \"flex\"\n  };\n  return /*#__PURE__*/React.createElement(DndContext, {\n    sensors: sensors,\n    onDragEnd: handleDragEnd //onDragOver: handleDragOver\n\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: containerStyle\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    id: 1,\n    items: items[1],\n    key: 1\n  })\n  /*Object.keys(items).map(group => React.createElement(Droppable, {\n   id: group,\n   items: items[group],\n   key: group\n  }))*/\n  ));\n}\n\n_s(App, \"a5H5rheIemr6Nc2a5XUwV//Y9lg=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DndContext","KeyboardSensor","PointerSensor","useSensor","useSensors","sortableKeyboardCoordinates","Droppable","arrayMove","insertAtIndex","removeAtIndex","App","items","setItems","sensors","coordinateGetter","handleDragEnd","active","over","id","container","activeIndex","data","current","sortable","index","overIndex","newItems","containerStyle","display","createElement","onDragEnd","style","key"],"sources":["/Users/patrice/Desktop/SP/Code/GitHub/tp-metro-count4u/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DndContext, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport { sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\nimport Droppable from \"./js/Droppable\";\nimport { arrayMove, insertAtIndex, removeAtIndex } from \"./js/array\";\n\nfunction App() {\n  const [items, setItems] = useState(\n    //{group1: [\"1\", \"2\", \"3\"]}\n    [\"1\", \"2\", \"3\"]\n    );\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n\n  /*const handleDragOver = ({\n    over,\n    active\n  }) => {\n    const overId = over?.id;\n\n    if (!overId) {\n      return;\n    }\n\n    const activeContainer = active.data.current.sortable.containerId;\n    const overContainer = over.data.current?.sortable.containerId;\n\n    if (!overContainer) {\n      return;\n    }\n\n    if (activeContainer !== overContainer) {\n      setItems(items => {\n        const activeIndex = active.data.current.sortable.index;\n        const overIndex = over.data.current?.sortable.index || 0;\n        return moveBetweenContainers(items, activeContainer, activeIndex, overContainer, overIndex, active.id);\n      });\n    }\n  };*/\n\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (!over) {\n      return;\n    }\n\n    if (active.id !== over.id) {\n      //const activeContainer = active.data.current.sortable.containerId;\n      //const overContainer = over.data.current?.sortable.containerId || over.id;\n      const container = over.id; //test\n      const activeIndex = active.data.current.sortable.index;\n      const overIndex = over.data.current?.sortable.index || 0;\n      setItems(items => {\n        let newItems;\n\n        //if (activeContainer === overContainer) {\n          newItems = { ...items,\n            //[overContainer]: arrayMove(items[overContainer], activeIndex, overIndex)\n            [container]: arrayMove(items[container], activeIndex, overIndex)\n          };\n        /*} else {\n          newItems = moveBetweenContainers(items, activeContainer, activeIndex, overContainer, overIndex, active.id);\n        }*/\n\n        return newItems;\n      });\n    }\n  };\n\n  /*const moveBetweenContainers = (items, activeContainer, activeIndex, overContainer, overIndex, item) => {\n    return { ...items,\n      [activeContainer]: removeAtIndex(items[activeContainer], activeIndex),\n      [overContainer]: insertAtIndex(items[overContainer], overIndex, item)\n    };\n  };*/\n\n  const containerStyle = {\n    display: \"flex\"\n  };\n  return React.createElement(DndContext, {\n    sensors: sensors,\n    onDragEnd: handleDragEnd,\n    //onDragOver: handleDragOver\n  }, React.createElement(\"div\", {\n    style: containerStyle\n  }, React.createElement(Droppable, {\n    id: 1,\n    items: items[1],\n    key: 1\n  })\n   /*Object.keys(items).map(group => React.createElement(Droppable, {\n    id: group,\n    items: items[group],\n    key: group\n  }))*/));\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,aAArC,EAAoDC,SAApD,EAA+DC,UAA/D,QAAiF,eAAjF;AACA,SAASC,2BAAT,QAA4C,mBAA5C;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,aAAnC,QAAwD,YAAxD;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAChC;EACA,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFgC,CAAlC;EAIA,MAAMc,OAAO,GAAGT,UAAU,CAACD,SAAS,CAACD,aAAD,CAAV,EAA2BC,SAAS,CAACF,cAAD,EAAiB;IAC7Ea,gBAAgB,EAAET;EAD2D,CAAjB,CAApC,CAA1B;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAME,MAAMU,aAAa,GAAG,QAGhB;IAAA,IAHiB;MACrBC,MADqB;MAErBC;IAFqB,CAGjB;;IACJ,IAAI,CAACA,IAAL,EAAW;MACT;IACD;;IAED,IAAID,MAAM,CAACE,EAAP,KAAcD,IAAI,CAACC,EAAvB,EAA2B;MAAA;;MACzB;MACA;MACA,MAAMC,SAAS,GAAGF,IAAI,CAACC,EAAvB,CAHyB,CAGE;;MAC3B,MAAME,WAAW,GAAGJ,MAAM,CAACK,IAAP,CAAYC,OAAZ,CAAoBC,QAApB,CAA6BC,KAAjD;MACA,MAAMC,SAAS,GAAG,uBAAAR,IAAI,CAACI,IAAL,CAAUC,OAAV,0EAAmBC,QAAnB,CAA4BC,KAA5B,KAAqC,CAAvD;MACAZ,QAAQ,CAACD,KAAK,IAAI;QAChB,IAAIe,QAAJ,CADgB,CAGhB;;QACEA,QAAQ,GAAG,EAAE,GAAGf,KAAL;UACT;UACA,CAACQ,SAAD,GAAaZ,SAAS,CAACI,KAAK,CAACQ,SAAD,CAAN,EAAmBC,WAAnB,EAAgCK,SAAhC;QAFb,CAAX;QAIF;AACR;AACA;;QAEQ,OAAOC,QAAP;MACD,CAbO,CAAR;IAcD;EACF,CA7BD;EA+BA;AACF;AACA;AACA;AACA;AACA;;;EAEE,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAE;EADY,CAAvB;EAGA,oBAAO9B,KAAK,CAAC+B,aAAN,CAAoB7B,UAApB,EAAgC;IACrCa,OAAO,EAAEA,OAD4B;IAErCiB,SAAS,EAAEf,aAF0B,CAGrC;;EAHqC,CAAhC,eAIJjB,KAAK,CAAC+B,aAAN,CAAoB,KAApB,EAA2B;IAC5BE,KAAK,EAAEJ;EADqB,CAA3B,eAEA7B,KAAK,CAAC+B,aAAN,CAAoBvB,SAApB,EAA+B;IAChCY,EAAE,EAAE,CAD4B;IAEhCP,KAAK,EAAEA,KAAK,CAAC,CAAD,CAFoB;IAGhCqB,GAAG,EAAE;EAH2B,CAA/B;EAKF;AACH;AACA;AACA;AACA;EAXK,CAJI,CAAP;AAgBD;;GA5FQtB,G;UAKSN,U,EAAWD,S,EAA0BA,S;;;KAL9CO,G;AA8FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}